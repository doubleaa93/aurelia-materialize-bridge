{"version":3,"sources":["checkbox/checkbox.js"],"names":["bindable","customElement","bindingMode","inject","AttributeManager","getBooleanFromAttributeValue","fireEvent","MdCheckbox","Element","defaultBindingMode","twoWay","element","controlId","id","handleChange","bind","attached","attributeManager","checkbox","mdFilledIn","addClasses","mdChecked","indeterminate","mdDisabled","disabled","checked","addEventListener","blur","detached","removeClasses","removeEventListener","mdCheckedChanged","newValue","mdDisabledChanged"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAASA,c,sBAAAA,Q;AAAUC,mB,sBAAAA,a;;AACVC,iB,mBAAAA,W;;AACAC,Y,+BAAAA,M;;AACAC,sB,2BAAAA,gB;;AACAC,kC,qBAAAA,4B;;AACDC,e,iBAAAA,S;;;4BAIKC,U,WAFZN,cAAc,aAAd,C,UACAE,OAAOK,OAAP,C,UAGER,SAAS;AACRS,4BAAoBP,YAAYQ;AADxB,OAAT,C,UAGAV,U,UACAA,U;AAED,4BAAYW,OAAZ,EAAqB;AAAA;;AAAA;;AAAA;;AAAA;;AACnB,eAAKA,OAAL,GAAeA,OAAf;AACA,eAAKC,SAAL,oBAAgCL,WAAWM,EAAX,EAAhC;AACA,eAAKC,YAAL,GAAoB,KAAKA,YAAL,CAAkBC,IAAlB,CAAuB,IAAvB,CAApB;AACD;;6BAEDC,Q,uBAAW;AACT,eAAKC,gBAAL,GAAwB,IAAIb,gBAAJ,CAAqB,KAAKc,QAA1B,CAAxB;AACA,cAAIb,6BAA6B,KAAKc,UAAlC,CAAJ,EAAmD;AACjD,iBAAKF,gBAAL,CAAsBG,UAAtB,CAAiC,WAAjC;AACD;AACD,cAAI,KAAKC,SAAL,KAAmB,IAAvB,EAA6B;AAC3B,iBAAKH,QAAL,CAAcI,aAAd,GAA8B,IAA9B;AACD,WAFD,MAEO;AACL,iBAAKJ,QAAL,CAAcI,aAAd,GAA8B,KAA9B;AACD;AACD,cAAIjB,6BAA6B,KAAKkB,UAAlC,CAAJ,EAAmD;AACjD,iBAAKL,QAAL,CAAcM,QAAd,GAAyB,IAAzB;AACD;AACD,eAAKN,QAAL,CAAcO,OAAd,GAAwBpB,6BAA6B,KAAKgB,SAAlC,CAAxB;AACA,eAAKH,QAAL,CAAcQ,gBAAd,CAA+B,QAA/B,EAAyC,KAAKZ,YAA9C;AACD,S;;6BAEDa,I,mBAAO;AACLrB,oBAAU,KAAKK,OAAf,EAAwB,MAAxB;AACD,S;;6BAEDiB,Q,uBAAW;AACT,eAAKX,gBAAL,CAAsBY,aAAtB,CAAoC,CAAC,WAAD,EAAc,UAAd,CAApC;AACA,eAAKX,QAAL,CAAcY,mBAAd,CAAkC,QAAlC,EAA4C,KAAKhB,YAAjD;AACD,S;;6BAEDA,Y,2BAAe;AACb,eAAKO,SAAL,GAAiB,KAAKH,QAAL,CAAcO,OAA/B;AACAnB,oBAAU,KAAKK,OAAf,EAAwB,MAAxB;AACD,S;;6BAEDoB,gB,6BAAiBC,Q,EAAU;AACzB,cAAI,KAAKd,QAAT,EAAmB;AACjB,iBAAKA,QAAL,CAAcO,OAAd,GAAwB,CAAC,CAACO,QAA1B;AACD;AACF,S;;6BAEDC,iB,8BAAkBD,Q,EAAU;AAC1B,cAAI,KAAKd,QAAT,EAAmB;AACjB,iBAAKA,QAAL,CAAcM,QAAd,GAAyB,CAAC,CAACQ,QAA3B;AACD;AACF,S;;;mBAtDMnB,E,GAAK,C","file":"../../../checkbox/checkbox.js","sourcesContent":["import { bindable, customElement } from 'aurelia-templating';\r\nimport { bindingMode } from 'aurelia-binding';\r\nimport { inject } from 'aurelia-dependency-injection';\r\nimport { AttributeManager } from '../common/attributeManager';\r\nimport { getBooleanFromAttributeValue } from '../common/attributes';\r\nimport {fireEvent} from '../common/events';\r\n\r\n@customElement('md-checkbox')\r\n@inject(Element)\r\nexport class MdCheckbox {\r\n  static id = 0;\r\n  @bindable({\r\n    defaultBindingMode: bindingMode.twoWay\r\n  }) mdChecked;\r\n  @bindable() mdDisabled;\r\n  @bindable() mdFilledIn;\r\n\r\n  constructor(element) {\r\n    this.element = element;\r\n    this.controlId = `md-checkbox-${MdCheckbox.id++}`;\r\n    this.handleChange = this.handleChange.bind(this);\r\n  }\r\n\r\n  attached() {\r\n    this.attributeManager = new AttributeManager(this.checkbox);\r\n    if (getBooleanFromAttributeValue(this.mdFilledIn)) {\r\n      this.attributeManager.addClasses('filled-in');\r\n    }\r\n    if (this.mdChecked === null) {\r\n      this.checkbox.indeterminate = true;\r\n    } else {\r\n      this.checkbox.indeterminate = false;\r\n    }\r\n    if (getBooleanFromAttributeValue(this.mdDisabled)) {\r\n      this.checkbox.disabled = true;\r\n    }\r\n    this.checkbox.checked = getBooleanFromAttributeValue(this.mdChecked);\r\n    this.checkbox.addEventListener('change', this.handleChange);\r\n  }\r\n\r\n  blur() {\r\n    fireEvent(this.element, 'blur');\r\n  }\r\n\r\n  detached() {\r\n    this.attributeManager.removeClasses(['filled-in', 'disabled']);\r\n    this.checkbox.removeEventListener('change', this.handleChange);\r\n  }\r\n\r\n  handleChange() {\r\n    this.mdChecked = this.checkbox.checked;\r\n    fireEvent(this.element, 'blur');\r\n  }\r\n\r\n  mdCheckedChanged(newValue) {\r\n    if (this.checkbox) {\r\n      this.checkbox.checked = !!newValue;\r\n    }\r\n  }\r\n\r\n  mdDisabledChanged(newValue) {\r\n    if (this.checkbox) {\r\n      this.checkbox.disabled = !!newValue;\r\n    }\r\n  }\r\n}\r\n"]}