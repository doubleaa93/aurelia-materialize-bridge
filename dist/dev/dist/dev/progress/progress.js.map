{"version":3,"sources":["progress/progress.js"],"names":["bindable","customElement","bindingMode","inject","MdProgress","Element","defaultBindingMode","twoWay","oneTime","element","mdSizeChanged","newValue","mdPixelSize","wrapper","style","height","width","mdPixelSizeChanged","isNaN","mdSize"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAASA,c,sBAAAA,Q;AAAUC,mB,sBAAAA,a;;AACVC,iB,mBAAAA,W;;AACAC,Y,+BAAAA,M;;;4BAIIC,U,WAFZH,cAAc,aAAd,C,UACAE,OAAOE,OAAP,C,UAEEL,U,UACAA,SAAS;AACRM,4BAAoBJ,YAAYK;AADxB,OAAT,C,UAGAP,U,UACAA,SAAS;AACRM,4BAAoBJ,YAAYM;AADxB,OAAT,C,UAGAR,SAAS;AACRM,4BAAoBJ,YAAYK;AADxB,OAAT,C;AAID,4BAAYE,OAAZ,EAAqB;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AACnB,eAAKA,OAAL,GAAeA,OAAf;AACD;;6BAMDC,a,0BAAcC,Q,EAAU;AACtB,eAAKC,WAAL,GAAmB,IAAnB;AACA,cAAI,KAAKC,OAAT,EAAkB;AAChB,iBAAKA,OAAL,CAAaC,KAAb,CAAmBC,MAAnB,GAA4B,EAA5B;AACA,iBAAKF,OAAL,CAAaC,KAAb,CAAmBE,KAAnB,GAA2B,EAA3B;AACD;AACF,S;;6BAEDC,kB,+BAAmBN,Q,EAAU;AAC3B,cAAIO,MAAMP,QAAN,CAAJ,EAAqB;AACnB,iBAAKC,WAAL,GAAmB,IAAnB;AACD,WAFD,MAEO;AACL,iBAAKO,MAAL,GAAc,EAAd;AACA,gBAAI,KAAKN,OAAT,EAAkB;AAChB,mBAAKA,OAAL,CAAaC,KAAb,CAAmBC,MAAnB,GAA+BJ,QAA/B;AACA,mBAAKE,OAAL,CAAaC,KAAb,CAAmBE,KAAnB,GAA8BL,QAA9B;AACD;AACF;AACF,S;;;;;;iBAtCqB,I;;;;;iBAGL,I;;;;;iBACI,K;;;;;iBAGT,Q;;;;;iBAGC,I","file":"../../../progress/progress.js","sourcesContent":["import { bindable, customElement } from 'aurelia-templating';\r\nimport { bindingMode } from 'aurelia-binding';\r\nimport { inject } from 'aurelia-dependency-injection';\r\n\r\n@customElement('md-progress')\r\n@inject(Element)\r\nexport class MdProgress {\r\n  @bindable() mdColor = null;\r\n  @bindable({\r\n    defaultBindingMode: bindingMode.twoWay\r\n  }) mdPixelSize = null;\r\n  @bindable() mdSize = 'big';\r\n  @bindable({\r\n    defaultBindingMode: bindingMode.oneTime\r\n  }) mdType = 'linear';\r\n  @bindable({\r\n    defaultBindingMode: bindingMode.twoWay\r\n  }) mdValue = null;\r\n\r\n  constructor(element) {\r\n    this.element = element;\r\n  }\r\n\r\n  // mdValueChanged(newValue, oldValue) {\r\n  //   console.log('mdValueChanged, newValue:', JSON.stringify(newValue), 'oldValue:', JSON.stringify(oldValue));\r\n  // }\r\n\r\n  mdSizeChanged(newValue) {\r\n    this.mdPixelSize = null;\r\n    if (this.wrapper) {\r\n      this.wrapper.style.height = '';\r\n      this.wrapper.style.width = '';\r\n    }\r\n  }\r\n\r\n  mdPixelSizeChanged(newValue) {\r\n    if (isNaN(newValue)) {\r\n      this.mdPixelSize = null;\r\n    } else {\r\n      this.mdSize = '';\r\n      if (this.wrapper) {\r\n        this.wrapper.style.height = `${newValue}px`;\r\n        this.wrapper.style.width = `${newValue}px`;\r\n      }\r\n    }\r\n  }\r\n}\r\n"]}