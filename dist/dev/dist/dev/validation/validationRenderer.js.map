{"version":3,"sources":["validation/validationRenderer.js"],"names":["MaterializeFormValidationRenderer","className","classNameFirst","render","instruction","unrender","error","elements","element","remove","add","tagName","label","querySelector","input","removeAttribute","classList","target","hasAttribute","addMessage","selectWrapper","closest","getAttribute","removeMessage","querySelectorAll","length","message","document","createElement","id","textContent","style","opacity","appendChild","nextSibling","window","getComputedStyle","removeChild"],"mappings":"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","file":"../../../validation/validationRenderer.js","sourcesContent":["export class MaterializeFormValidationRenderer {\r\n\r\n  className = 'md-input-validation';\r\n  classNameFirst = 'md-input-validation-first';\r\n\r\n  render(instruction) {\r\n    for (let { error, elements } of instruction.unrender) {\r\n      for (let element of elements) {\r\n        this.remove(element, error);\r\n      }\r\n    }\r\n    for (let { error, elements } of instruction.render) {\r\n      for (let element of elements) {\r\n        this.add(element, error);\r\n      }\r\n    }\r\n  }\r\n\r\n  add(element, error) {\r\n    switch (element.tagName) {\r\n    case 'MD-INPUT': {\r\n      let label = element.querySelector('label');\r\n      let input = element.querySelector('input');\r\n      if (label) {\r\n        label.removeAttribute('data-error');\r\n      }\r\n      if (input) {\r\n        input.classList.remove('valid');\r\n        input.classList.add('invalid');\r\n        error.target = input;\r\n        if (input.hasAttribute('data-show-errortext')) {\r\n          this.addMessage(element, error);\r\n        }\r\n      }\r\n      break;\r\n    }\r\n    case 'SELECT': {\r\n      const selectWrapper = element.closest('.select-wrapper');\r\n      if (!selectWrapper) {\r\n        return;\r\n      }\r\n      let input = selectWrapper.querySelector('input');\r\n      if (input) {\r\n        input.classList.remove('valid');\r\n        input.classList.add('invalid');\r\n        error.target = input;\r\n        if (!(input.hasAttribute('data-show-errortext') &&\r\n            input.getAttribute('data-show-errortext') === 'false')) {\r\n          this.addMessage(selectWrapper, error);\r\n        }\r\n      }\r\n      break;\r\n    }\r\n    default: break;\r\n    }\r\n  }\r\n\r\n  remove(element, error) {\r\n    switch (element.tagName) {\r\n    case 'MD-INPUT': {\r\n      this.removeMessage(element, error);\r\n\r\n      let input = element.querySelector('input');\r\n      if (input && element.querySelectorAll('.' + this.className).length === 0) {\r\n        input.classList.remove('invalid');\r\n        input.classList.add('valid');\r\n      }\r\n      break;\r\n    }\r\n    case 'SELECT': {\r\n      const selectWrapper = element.closest('.select-wrapper');\r\n      if (!selectWrapper) {\r\n        return;\r\n      }\r\n      this.removeMessage(selectWrapper, error);\r\n\r\n      let input = selectWrapper.querySelector('input');\r\n      if (input && selectWrapper.querySelectorAll('.' + this.className).length === 0) {\r\n        input.classList.remove('invalid');\r\n        input.classList.add('valid');\r\n      }\r\n      break;\r\n    }\r\n    default: break;\r\n    }\r\n  }\r\n\r\n  addMessage(element, error) {\r\n    let message = document.createElement('div');\r\n    message.id = `md-input-validation-${error.id}`;\r\n    message.textContent = error.message;\r\n    message.className = this.className;\r\n    if (element.querySelectorAll('.' + this.className).length === 0) {\r\n      message.className += ' ' + this.classNameFirst;\r\n    }\r\n    message.style.opacity = 0;\r\n    element.appendChild(message, element.nextSibling);\r\n    window.getComputedStyle(message).opacity;\r\n    message.style.opacity = 1;\r\n  }\r\n\r\n  removeMessage(element, error) {\r\n    let message = element.querySelector(`#md-input-validation-${error.id}`);\r\n    if (message) {\r\n      element.removeChild(message);\r\n    }\r\n  }\r\n\r\n}\r\n"]}