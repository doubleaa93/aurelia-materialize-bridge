{"version":3,"sources":["chip/chips.js"],"names":["bindable","customAttribute","inject","getLogger","MdChips","Element","element","log","onChipAdd","bind","onChipDelete","onChipSelect","attached","options","data","placeholder","secondaryPlaceholder","$","material_chip","on","detached","e","chip"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAQA,c,sBAAAA,Q;AAAUC,qB,sBAAAA,e;;AACVC,Y,+BAAAA,M;;AACAC,e,mBAAAA,S;;;yBAMKC,O,WAFZH,gBAAgB,UAAhB,C,UACAC,OAAOG,OAAP,C,UAEEL,U,UACAA,U,UACAA,U;AAED,yBAAYM,OAAZ,EAAqB;AAAA;;AAAA;;AAAA;;AAAA;;AACnB,eAAKA,OAAL,GAAeA,OAAf;AACA,eAAKC,GAAL,GAAWJ,UAAU,UAAV,CAAX;;AAEA,eAAKK,SAAL,GAAiB,KAAKA,SAAL,CAAeC,IAAf,CAAoB,IAApB,CAAjB;AACA,eAAKC,YAAL,GAAoB,KAAKA,YAAL,CAAkBD,IAAlB,CAAuB,IAAvB,CAApB;AACA,eAAKE,YAAL,GAAoB,KAAKA,YAAL,CAAkBF,IAAlB,CAAuB,IAAvB,CAApB;AACD;;0BAEDG,Q,uBAAW;AACT,cAAIC,UAAU;AACZC,kBAAM,KAAKA,IADC;AAEZC,yBAAa,KAAKA,WAFN;AAGZC,kCAAsB,KAAKA;AAHf,WAAd;AAKAC,YAAE,KAAKX,OAAP,EAAgBY,aAAhB,CAA8BL,OAA9B;AACAI,YAAE,KAAKX,OAAP,EAAgBa,EAAhB,CAAmB,UAAnB,EAA+B,KAAKX,SAApC;AACAS,YAAE,KAAKX,OAAP,EAAgBa,EAAhB,CAAmB,aAAnB,EAAkC,KAAKT,YAAvC;AACAO,YAAE,KAAKX,OAAP,EAAgBa,EAAhB,CAAmB,aAAnB,EAAkC,KAAKR,YAAvC;AACD,S;;0BAEDS,Q,uBAAW,CAEV,C;;0BAEDZ,S,sBAAUa,C,EAAGC,I,EAAM,CAElB,C;;0BACDZ,Y,yBAAaW,C,EAAGC,I,EAAM,CAErB,C;;0BACDX,Y,yBAAaU,C,EAAGC,I,EAAM,CAErB,C;;;;;;iBArCkB,E;;;;;iBACO,E;;;;;iBACS,E","file":"../../../chip/chips.js","sourcesContent":["import {bindable, customAttribute} from 'aurelia-templating';\r\nimport {inject} from 'aurelia-dependency-injection';\r\nimport {getLogger} from 'aurelia-logging';\r\n\n// import {fireEvent} from '../common/events';\n\n@customAttribute('md-chips')\r\n@inject(Element)\r\nexport class MdChips {\r\n  @bindable() data = [];\r\n  @bindable() placeholder = '';\r\n  @bindable() secondaryPlaceholder = '';\r\n\r\n  constructor(element) {\r\n    this.element = element;\r\n    this.log = getLogger('md-chips');\r\n\r\n    this.onChipAdd = this.onChipAdd.bind(this);\r\n    this.onChipDelete = this.onChipDelete.bind(this);\r\n    this.onChipSelect = this.onChipSelect.bind(this);\r\n  }\r\n\r\n  attached() {\r\n    let options = {\r\n      data: this.data,\r\n      placeholder: this.placeholder,\r\n      secondaryPlaceholder: this.secondaryPlaceholder\r\n    };\r\n    $(this.element).material_chip(options);\r\n    $(this.element).on('chip.add', this.onChipAdd);\r\n    $(this.element).on('chip.delete', this.onChipDelete);\r\n    $(this.element).on('chip.select', this.onChipSelect);\r\n  }\r\n\r\n  detached() {\r\n    //\r\n  }\r\n\r\n  onChipAdd(e, chip) {\n    // fireEvent(this.element, 'change');\n  }\n  onChipDelete(e, chip) {\n    // fireEvent(this.element, 'change');\n  }\n  onChipSelect(e, chip) {\n    // fireEvent(this.element, 'change');\n  }\n}\r\n"]}